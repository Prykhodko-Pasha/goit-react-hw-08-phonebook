{"version":3,"sources":["components/RegisterPage/RegisterPage.js"],"names":["RegisterPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","handleChange","e","currentTarget","value","component","maxWidth","sx","width","height","display","alignItems","justifyContent","textAlign","padding","borderRadius","position","variant","onSubmit","preventDefault","authOperations","noValidate","mt","flexDirection","margin","required","fullWidth","id","label","autoFocus","onChange","autoComplete","htmlFor","type","endAdornment","onClick","onMouseDown","edge","size","mb"],"mappings":"uWAiBe,SAASA,IACtB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwCN,oBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,QACHR,EAASQ,GACT,MACF,IAAK,WACHN,EAAYM,GACZ,MACF,QACE,SAoBN,OACE,cAAC,IAAD,CACEC,UAAU,OACVC,SAAS,KACTC,GAAI,CACFC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,UARpB,SAWE,eAAC,IAAD,CACEL,GAAI,CACFM,UAAW,SACXC,QAAS,OACTC,aAAc,OACdC,SAAU,YALd,UAQE,cAAC,IAAD,CAAYX,UAAU,KAAKY,QAAQ,KAAnC,+BAGA,eAAC,IAAD,CACEZ,UAAU,OACVa,SAzCa,SAAAhB,GACnBA,EAAEiB,iBACF7B,EAAS8B,IAAwB,CAAE3B,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAqCNuB,YAAU,EACVd,GAAI,CACFe,GAAI,EACJZ,QAAS,OACTa,cAAe,SACfZ,WAAY,SACZC,eAAgB,UATpB,UAYE,cAAC,IAAD,CACEY,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNnC,KAAK,OACLW,MAAOX,EACPoC,WAAS,EACTC,SAAU7B,IAGZ,cAAC,IAAD,CACEuB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,QACNnC,KAAK,QACLW,MAAOT,EACPoC,aAAa,QACbD,SAAU7B,IAGZ,eAAC,IAAD,CAAauB,OAAO,SAASP,QAAQ,WAAWS,WAAS,EAACD,UAAQ,EAAlE,UACE,cAAC,IAAD,CAAYO,QAAQ,8BAApB,sBAGA,cAAC,IAAD,CACEL,GAAG,8BACHM,KAAMlC,EAAe,OAAS,WAC9BN,KAAK,WACLW,MAAOP,EACPiC,SAAU7B,EACViC,aACE,cAAC,IAAD,CAAgBlB,SAAS,MAAzB,SACE,cAAC,IAAD,CACE,aAAW,6BACXmB,QAjFc,WAC9BnC,GAAiBD,IAiFDqC,YA9Ec,SAAAlC,GAC9BA,EAAEiB,kBA8EckB,KAAK,MAJP,SAMGtC,EAAe,cAAC,IAAD,IAAoB,cAAC,IAAD,QAI1C6B,MAAM,iBAIV,cAAC,IAAD,CACEK,KAAK,SACLhB,QAAQ,YACRqB,KAAK,QACL/B,GAAI,CACFiB,OAAQ,SACRF,GAAI,EACJiB,GAAI,GAPR","file":"static/js/movies-page.1c3d121c.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\nimport * as authOperations from '../../redux/auth/auth-operations';\r\n\r\nexport default function RegisterPage() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      sx={{\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          textAlign: 'center',\r\n          padding: '50px',\r\n          borderRadius: '40px',\r\n          position: 'relative',\r\n        }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registratoin page\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          onSubmit={handleSubmit}\r\n          noValidate\r\n          sx={{\r\n            mt: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            autoFocus\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            autoComplete=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <FormControl margin=\"normal\" variant=\"outlined\" fullWidth required>\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? 'text' : 'password'}\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password_\"\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            sx={{\r\n              margin: '0 auto',\r\n              mt: 3,\r\n              mb: 2,\r\n            }}\r\n          >\r\n            Register\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n"],"sourceRoot":""}